[Unit]
# This is desired just for CLI simplicity: "systemctl restart bios" with no extensions asked
Description=Service to toggle 42ity related targets and whoever they "Wants"
Requires=multi-user.target network.target
After=multi-user.target network.target
Conflicts=rescue.target shutdown.target

# Offload enabling of bios component targets to where its failure
# would not block the critical wrapper unit called by many consumers.
# Sometimes executions of systemctl from units just block or loop...
Wants=bios-enabler-pre.service
After=bios-enabler-pre.service

[Service]
Type=oneshot
RemainAfterExit=yes

### These enablements should now be handled by bios-enabler-pre.service
###ExecStartPre=-/bin/systemctl unmask bios.target fty-db.target fty-license-accepted.target bios-pre-eula.target
###ExecStartPre=-/bin/systemctl enable bios.target fty-db.target fty-license-accepted.target bios-pre-eula.target

ExecStart=/bin/systemctl start bios-pre-eula.target fty-license-accepted.target fty-db.target bios.target

ExecStop=/bin/systemctl stop bios.target fty-db.target fty-license-accepted.target bios-pre-eula.target
# Make sure this runs, even if there is an unclean startup/shutdown of the unit
ExecStopPost=/bin/systemctl stop bios.target fty-db.target fty-license-accepted.target bios-pre-eula.target
# ...and wait for all listed services to finish their lives
ExecStopPost=/bin/dash -c "for U in $(/bin/systemctl show -p Wants bios.target fty-db.target fty-license-accepted.target bios-pre-eula.target | cut -d= -f2) ; do case \"$U\" in *.path|*.timer) ;; *) /bin/systemctl stop --no-ask-password -- $U & ;; esac ; done ; wait"

# Ordinary frozen services stop for 90 sec max (default),
# so this service should outlive them
TimeoutStopSec=120

[Install]
# Note: this service was both WantedBy (triggered to start with no waiting
# to complete) and Requires/After the multi-user.target. So when system
# finishes proper basic startup, it triggered/scheduled a startup of the
# bios.service (and that triggers bios.target) which actually takes place
# after the multi-user.target has reported completion of its own startup.
# Per featureimage/systemd-deps we do not want to break into early startup
# like this, and leave target and service startup to their own definitions.
#WantedBy=multi-user.target
