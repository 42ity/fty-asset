################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
program_libs = src/libfty_asset.la ${project_libs}

# Programs need to link the c++ runtime if everything was compiled statically.
if !ENABLE_SHARED
program_libs += -lstdc++ -lm
endif

lib_LTLIBRARIES += src/libfty_asset.la
pkgconfig_DATA = src/libfty_asset.pc

include_HEADERS = \
    include/fty_asset.h \
    include/fty_asset_configurator.h \
    include/fty_asset_server.h \
    include/fty_asset_autoupdate.h \
    include/fty_asset_uptime.h \
    include/fty_asset_uptime_configurator.h \
    include/fty_asset_inventory.h \
    include/fty_asset_library.h

src_libfty_asset_la_SOURCES = \
    src/asset_defs.cc \
    src/total_power.cc \
    src/dns.cc \
    src/fty_asset_configurator.cc \
    src/defs.cc \
    src/dbhelpers.cc \
    src/preproc.cc \
    src/dbpath.cc \
    src/fty_asset_server.cc \
    src/fty_asset_autoupdate.cc \
    src/fty_asset_uptime.cc \
    src/fty_asset_uptime_configurator.cc \
    src/fty_asset_inventory.cc \
    src/platform.h

if ENABLE_DRAFTS
src_libfty_asset_la_SOURCES += \
    src/fty_asset_private_selftest.cc
endif

src_libfty_asset_la_CPPFLAGS = ${AM_CPPFLAGS}
src_libfty_asset_la_CXXFLAGS = ${AM_CXXFLAGS}

src_libfty_asset_la_LDFLAGS = \
    -version-info @LTVER@ \
    $(LIBTOOL_EXTRA_LDFLAGS)

if ON_MINGW
src_libfty_asset_la_LDFLAGS += \
    -no-undefined \
    -avoid-version
endif

if ON_CYGWIN
src_libfty_asset_la_LDFLAGS += \
    -no-undefined \
    -avoid-version
endif

src_libfty_asset_la_LIBADD = ${project_libs}

if WITH_SYSTEMD_UNITS
systemdsystemunit_DATA =
endif #WITH_SYSTEMD_UNITS

if ENABLE_FTY_ASSET
bin_PROGRAMS += src/fty-asset
src_fty_asset_CPPFLAGS = ${AM_CPPFLAGS}
src_fty_asset_LDADD = ${program_libs}
src_fty_asset_SOURCES = src/fty_asset.cc
src_fty_asset_config_DATA = src/fty-asset.cfg
src_fty_asset_configdir = $(sysconfdir)/fty-asset
if WITH_SYSTEMD_UNITS
systemdsystemunit_DATA += src/fty-asset.service
endif #WITH_SYSTEMD_UNITS
endif #ENABLE_FTY_ASSET

if ENABLE_FTY_ASSET_CLI
bin_PROGRAMS += src/fty-asset-cli
src_fty_asset_cli_CPPFLAGS = ${AM_CPPFLAGS}
src_fty_asset_cli_LDADD = ${program_libs}
src_fty_asset_cli_SOURCES = src/fty_asset_cli.cc
endif #ENABLE_FTY_ASSET_CLI

if ENABLE_FTY_ASSET_SELFTEST
check_PROGRAMS += src/fty_asset_selftest
noinst_PROGRAMS += src/fty_asset_selftest
src_fty_asset_selftest_CPPFLAGS = ${AM_CPPFLAGS}
src_fty_asset_selftest_LDADD = ${program_libs}
src_fty_asset_selftest_SOURCES = src/fty_asset_selftest.cc
endif #ENABLE_FTY_ASSET_SELFTEST

# define custom target for all products of /src
src:
	src/fty-asset \
	src/fty-asset-cli \
	src/fty_asset_selftest \
	src/libfty_asset.la

	cd $(srcdir); gsl -target:- project.xml

check-local: src/fty_asset_selftest
	$(LIBTOOL) --mode=execute $(builddir)/src/fty_asset_selftest

check-verbose: src/fty_asset_selftest
	$(LIBTOOL) --mode=execute $(builddir)/src/fty_asset_selftest -v

# Run the selftest binary under valgrind to check for memory leaks
memcheck: src/fty_asset_selftest
	$(LIBTOOL) --mode=execute valgrind --tool=memcheck \
		--leak-check=full --show-reachable=yes --error-exitcode=1 \
		--suppressions=$(srcdir)/src/.valgrind.supp \
		$(builddir)/src/fty_asset_selftest

# Run the selftest binary under valgrind to check for performance leaks
callcheck: src/fty_asset_selftest
	$(LIBTOOL) --mode=execute valgrind --tool=callgrind \
		$(builddir)/src/fty_asset_selftest

# Run the selftest binary under gdb for debugging
debug: src/fty_asset_selftest
	$(LIBTOOL) --mode=execute gdb -q \
		$(builddir)/src/fty_asset_selftest

# Run the selftest binary with verbose switch for tracing
animate: src/fty_asset_selftest
	$(LIBTOOL) --mode=execute $(builddir)/src/fty_asset_selftest -v

if WITH_GCOV
coverage: src/fty_asset_selftest
	@echo "called configure --with-gcov"
	lcov --base-directory . --directory . --zerocounters -q
	$(MAKE) check
	lcov --base-directory . --directory . --capture -o coverage.info
	lcov --remove coverage.info "/usr*" -o coverage.info
	lcov --remove coverage.info "fty_asset_selftest.c" -o coverage.info
	$(RM) -rf coverage/*
	genhtml -o coverage/ -t "fty-asset test coverage" --num-spaces 4 coverage.info
else
coverage: src/fty_asset_selftest
	@echo "call make clean && configure --with-gcov to enable code coverage"
	@exit 1
endif


################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
